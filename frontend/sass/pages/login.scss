// USER LOGIN 5
@import '../global/_variables'; // global variables.
@import '../global/components/_mixins'; // global mixings.

.user-login-5{
	min-height:100vh;

	.bs-reset{
		margin:0;
		padding:0;
	}  

	.text-right{
		text-align: right;
	}

	.login-bg{
		background-position: center;
		background-size: cover;
		background-repeat: no-repeat;
		min-height:100vh;
	}

	.login-logo{
		position: absolute;
		top:2.5em;
		left:2.5em;

		&.login-6{
			top:80px;
			left:80px;
		}
	}

	.login-container{
		position:relative;
		min-height:100vh;

		>.login-content, 
		.login-social,
		.login-copyright{
			padding:0 80px;
		}

		>.login-content{
			margin-top:35%;

			>h1{				
				font-size: 30px;
				font-weight: 300;
				color:#4e5a64;
				margin-bottom:20%;
			}

			p{
				color:#a0a9b4;
				font-size: 15px;
				line-height:22px;
			}

			>.login-form{
				margin-top:80px;
				color:#a4aab2;
				font-size: 13px;

				.form-control {
					width:100%;
					padding: 10px 0;
					border:none;
					border-bottom:1px solid;
					border-color:#a0a9b4;
					color:#868e97;
					font-size: 14px;
					margin-bottom: 40px;

					&:focus{
						outline: 0;
					}
				}

				.forgot-password{
					position: absolute;
					right: 2px;
					bottom: 21px;
					margin: 0;
				}
				.login-button{
					display:inline-block;
				}

				.rem-password{
					margin-top: 10px;

					> p{
						margin:0;
					}

					>.rem-checkbox{
						border-color:#a4aab2;
					}
				}

				.forgot-password{
					margin-right:1em; 

					> a{
						color:#a4aab2;

						&:hover{
							color:#337ab7;
							text-decoration: none;
						}

						&:focus{
							color:#a4aab2;
							text-decoration: none;
						}
					}
				}
			}
		}


		>.login-footer{
			position:absolute;
			bottom:0;
			width: 100%;
			padding-bottom: 10px;

			.login-social{
				padding-right:0;

				li{
					display:inline-block;
					list-style: none;
					margin-right:1em;
				}

				a{ 
					color:#a9b5be;
					font-size: 18px;

					&:hover{
						color:#337ab7;
						text-decoration: none;
					}

					&:focus{
						color: #a9b5be;
					}
				}
			}

			.login-copyright{
				padding-left: 0;
				margin-top:6px;

				> p{
					margin: 0;
					font-size: 13px;
					color: #a9b5be;
				}
			}
		}

		.login-message{
			margin-top: 17%;
		}

	}


	// ERROR HANDLER
	.alert{
		margin-top: -60px;
	}

	.form-group{

		&.has-error{
			border-bottom: 2px solid $brand-danger !important;
		}

		&.valid{
			border-bottom: 1px solid #a0a9b4 !important;
		}
	}
}

// END

// MOBILE

@media (max-width: 1365px) {
	.user-login-5{

		.login-logo{
			&.login-6{
				top:40px;
				left:40px;
			}
		}

		.login-container{

			>.login-content,
			.login-social,
			.login-copyright{
				padding:0 40px;
			}
			>h1{	
				margin-bottom:10%;
			}


			.login-social{
				padding-right:0;
			}

			.login-copyright{
				padding-left:0;
			}
		}
	}
}

@media (max-width: 1023px) {

	.user-login-5{
		min-height:50vh;

		.mt-login-5-bsfix{
			width:100%;
		}

		.login-bg{
			min-height: 50vh;
		}

		.login-logo{
			&.login-6{
				position: relative;
				margin:0 0 40px 0;
			}
		}

		.login-container{
			min-height: 50vh;

			>.login-content{
				margin-top:60px;

				.login-form{
					margin-top: 40px;
				}

			}

			.rem-password{
				margin-bottom: 1em;
			}

			>.login-footer{
				position:relative;
				margin-top:40px;
				padding-bottom: 0;

				.login-social{

					li{
						margin-right:0.5em;
					}
				}
			}
		}

		.alert{
			margin-top:-20px;
		}

	}
}

$blockSize: 1.5em;
//$blockSize: 6vmin; // Try this in Firefox! Viewport based size, which doesn't work in Canary at the moment
// Play with these to see what you get
$delay: .065s;
$duration: .88s;
$startingColor: #578ebe;
$endingColor: #dadada;
// Calculate some values
$blockMargin: $blockSize / 3;
$loaderSize: $blockSize * 3 + $blockMargin * 2;
@mixin animation-delay( $delay) {
  -webkit-animation-delay: $delay;
  animation-delay: $delay;
}

// Official syntax supported by IE10, FF16, Opera 12.1,
// so we're only going to add the webkit prefix
@mixin animation( $ani1:null, $ani2:null) {
  @if ($ani2 !=null) {
    -webkit-animation: $ani1, $ani2;
    animation: $ani1, $ani2;
  }
  @else if ($ani1 !=null) {
    -webkit-animation: $ani1;
    animation: $ani1;
  }
}

.loader {
  position: absolute;
  top: 50%;
  left: 50%;
  width: $loaderSize;
  height: $loaderSize;
  margin-left: -$loaderSize/2;
  margin-top: -$loaderSize/2;
}

.loader-block {
  position: absolute;
  top: 0;
  left: 0;
  display: inline-block;
  opacity: 0;
  width: $blockSize;
  height: $blockSize;
  background: $startingColor;
  @include animation(show $duration step-end infinite alternate, pulse $duration linear infinite alternate);
}

// Second
.loader-block:nth-child(1) {
  @include translate(0, 0);
  @include animation-delay(1 * $delay);
}

// Ninth
.loader-block:nth-child(2) {
  @include translate($blockSize + $blockMargin, 0);
  @include animation-delay(2 * $delay);
}

// Fourth
.loader-block:nth-child(3) {
  @include translate(($blockSize * 2) + ($blockMargin * 2), 0);
  @include animation-delay(3 * $delay);
}

// Sixth
.loader-block:nth-child(4) {
  @include translate(0, $blockSize + $blockMargin);
  @include animation-delay(5 * $delay);
}

// Third
.loader-block:nth-child(5) {
  @include translate($blockSize + $blockMargin, $blockSize + $blockMargin);
  @include animation-delay(2 * $delay);
}

// Eighth
.loader-block:nth-child(6) {
  @include translate(($blockSize * 2) + ($blockMargin * 2), $blockSize + $blockMargin);
  @include animation-delay(7 * $delay);
}

// Seventh
.loader-block:nth-child(7) {
  @include translate(0, ($blockSize * 2) + ($blockMargin * 2));
  @include animation-delay(6 * $delay);
}

// Fifth
.loader-block:nth-child(8) {
  @include translate($blockSize + $blockMargin, ($blockSize * 2) + ($blockMargin * 2));
  @include animation-delay(4 * $delay);
}

// First
.loader-block:nth-child(9) {
  @include translate(($blockSize * 2) + ($blockMargin * 2), ($blockSize * 2) + ($blockMargin * 2));
}

@-webkit-keyframes pulse {
  from,
  40% {
    background: $startingColor;
  }
  to {
    background: $endingColor;
  }
}

@-webkit-keyframes show {
  from,
  40% {
    opacity: 0;
  }
  41%,
  to {
    opacity: 1;
  }
}

@keyframes pulse {
  from,
  40% {
    background: $startingColor;
  }
  to {
    background: $endingColor;
  }
}

@keyframes show {
  from,
  40% {
    opacity: 0;
  }
  41%,
  to {
    opacity: 1;
  }
} 